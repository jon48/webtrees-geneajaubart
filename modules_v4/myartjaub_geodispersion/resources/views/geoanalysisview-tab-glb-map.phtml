<?php

declare(strict_types=1);

use Brick\Geo\IO\GeoJSONWriter;
use Brick\Geo\IO\GeoJSON\FeatureCollection;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;
use MyArtJaub\Webtrees\Common\GeoDispersion\Config\MapColorsConfig;
use MyArtJaub\Webtrees\Common\GeoDispersion\GeoAnalysis\GeoAnalysisResult;
use MyArtJaub\Webtrees\Module\GeoDispersion\Views\AbstractGeoAnalysisView;
use Ramsey\Uuid\Uuid;
use Spatie\Color\Color;

/**
 * @var string                          $module_name
 * @var Tree                            $tree
 * @var AbstractGeoAnalysisView         $view
 * @var GeoAnalysisResult               $result
 * @var callable                        $items_descr
 * @var Brick\Geo\IO\GeoJSON\Feature[]  $features
 * @var MapColorsConfig                 $colors
 * @var object                          $leaflet_config
 * @var string                          $js_script_url
 */

$map_id = 'maj-geodisp-map-' . Uuid::uuid4()->toString();

$places_known = $result->countKnown();
$places_other = $result->countExcluded();
$places_unknown = $result->countUnknown();

$max_place_count = $result->maxCount();

?>

<?= view($module_name . '::geoanalysisview-tab-glb-summary', [ 'places_known' => $places_known, 'places_other' => $places_other, 'places_unknown' => $places_unknown]) ?>

<?php if (count($features) > 0) : ?>
    <div class="maj-geodisp-tab-glb-map mx-auto mt-3">
        <div class="row maj-geodisp-map-wrapper mx-auto">
            <div id="<?= e($map_id) ?>" class="col-sm-9 wt-ajax-load maj-geodisp-map" dir="ltr"></div>
        </div>
    </div>

    <?php
    // Add tooltip and color info to features
    $features_tooltip = [];
    foreach ($features as $feature) {
        if ($feature->getProperty('count') !== null) {
            $features_tooltip[] = $feature
                ->withProperty('color_ratio', $feature->getProperty('count') / $max_place_count)
                ->withProperty('tooltip', view($module_name . '::components/map-tooltip', [ 'properties' => $feature->getProperties(), 'items_descr' => $items_descr]));
        } else {
            $features_tooltip[] = $feature;
        }
    }
    $features = new FeatureCollection(...$features_tooltip);

    // Prepare colors
    $colors = collect([
        'defaultColor'  =>  $colors->defaultColor()->toRgb(),
        'strokeColor'   =>  $colors->strokeColor()->toRgb(),
        'lowColor'      =>  $colors->minValueColor()->toRgb(),
        'highColor'     =>  $colors->maxValueColor()->toRgb(),
        'hoverColor'    =>  $colors->hoverColor()->toRgb()
    ])->mapWithKeys(fn(Color $value, string $key): array => [
        $key => [ 'r' => $value->red(), 'g' => $value->green(), 'b' => $value->blue()]
    ]);

    // Initiate GeoJson writer
    $geojson_writer = new GeoJSONWriter();

    ?>

    <?php View::pushunique('javascript') ?>

    <script src="<?= e($js_script_url) ?>"></script>

    <?php View::endpushunique() ?>

    <?php View::push('javascript') ?>
    <script>
    "use strict";

    $(function() {
        let style = majGeodispersion.MapFeaturesStyle(<?= json_encode($colors, JSON_THROW_ON_ERROR) ?>);

        let map = majGeodispersion.drawMap('<?= e($map_id) ?>', <?= json_encode($leaflet_config, JSON_THROW_ON_ERROR) ?>);
        majGeodispersion.addGeoJsonDataToMap(map, <?=  $geojson_writer->write($features) ?>, style);
    });

    </script>
    <?php View::endpush() ?>

<?php endif; ?>
