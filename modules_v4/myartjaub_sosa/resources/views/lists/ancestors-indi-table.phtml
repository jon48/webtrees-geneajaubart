<?php

declare(strict_types=1);

use Fisharebest\Webtrees\Age;
use Fisharebest\Webtrees\Date;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\Registry;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;

/**
 * @var string                      $module_name
 * @var Tree                        $tree
 * @var \Illuminate\Support\Collection<int, \Fisharebest\Webtrees\Individual>   $ancestors
 * @var int                         $nb_ancestors_all
 * @var int                         $nb_ancestors_theor
 * @var int                         $nb_ancestors_shown
 */

// lists requires a unique ID in case there are multiple lists per page
$table_id = Registry::idFactory()->id('table-ancestors-indi-');

$today_jd          = Registry::timestampFactory()->now()->julianDay();
$hundred_years_ago = Registry::timestampFactory()->now()->subtractYears(100)->julianDay();

$show_estimated_dates = (bool) $tree->getPreference('SHOW_EST_LIST_DATES');

$unique_indis = []; // Don't double-count indis with multiple names.

?>

<!-- MYARTJAUB-START -->
<?php
    $maj_columns = hook(
        \MyArtJaub\Webtrees\Contracts\Hooks\SosaIndividualDatatablesExtenderInterface::class,
        fn(\MyArtJaub\Webtrees\Module\Hooks\Hooks\SosaIndividualDatatablesExtenderCollector $hook) => $hook->sosaIndividualColumns($ancestors)
    ) ?? [];
    $maj_issourced_birth = $maj_columns['issourced']['birth'] ?? null;
    $maj_issourced_death = $maj_columns['issourced']['death'] ?? null;

    $column_indexes = [];
    foreach ($maj_columns as $maj_columns_mod) {
        foreach ($maj_columns_mod as $maj_column) {
            $column_indexes[] = $maj_column['position'] ?? null;
        }
    }
    $column_indexes = collect($column_indexes)->filter();
    ?>
<!-- MYARTJAUB-END -->

<?php View::push('javascript') ?>
<script>
$("#<?= e($table_id) ?> > .maj-table-ancestors-indi").dataTable({
    processing: true,
    retrieve: true,
    columns: [
        /* Sosa         */ { type: "num" },
        /* Given names  */ { type: "text" },
        /* Surnames     */ { type: "text" },
        /* Birth date   */ { type: "num" },
        /* Birthplace   */ { type: "text" },
        //MYARTJAUB-START
        <?= $maj_issourced_birth !== null ? json_encode($maj_issourced_birth['column_def'], JSON_THROW_ON_ERROR) . ', ' : '' ?>
        //MYARTJAUB-END
        /* Death date   */ { type: "num" },
        /* Age          */ { type: "num" },
        /* Death place  */ { type: "text" },
        //MYARTJAUB-START
        <?= $maj_issourced_death !== null ? json_encode($maj_issourced_death['column_def'], JSON_THROW_ON_ERROR) . ', ' : '' ?>
        //MYARTJAUB-END
        /* Filter sex   */ { sortable: false },
        /* Filter birth */ { sortable: false },
        /* Filter death */ { sortable: false },
        /* Filter tree  */ { sortable: false }
    ],
    sorting: [[0, 'asc']]
});

$("#<?= e($table_id) ?>")
    /* Hide/show parents */
    .on("click", "#btn-toggle-parents", function() {
        $(".wt-individual-list-parents").slideToggle();
    })
    /* Hide/show statistics */
    .on("click", "#btn-toggle-statistics", function() {
        $("#maj-ancestors-indi-charts-<?= e($table_id) ?>").slideToggle({
            complete: function () {
                // Trigger resize to redraw the chart
                $('div[id^="google-chart-"]').resize();
            }
        });
    })
    /* Filter buttons in table header */
    .on("click", "input[data-filter-column]", function() {
        let checkbox = $(this);

        // Deselect other options
        let siblings = checkbox.siblings("input[type='checkbox']");
        siblings.prop("checked", false).removeAttr("checked");

        // Apply (or clear) this filter
        let checked = checkbox.prop("checked");
        let filter  = checked ? checkbox.data("filter-value") : "";
        let column  = $("#<?= e($table_id) ?> .maj-table-ancestors-indi").DataTable().column(checkbox.data("filter-column"));
        column.search(filter).draw();
    });
</script>
<?php View::endpush() ?>
    
<?php
$max_age = (int) $tree->getPreference('MAX_ALIVE_AGE');

// Initialise chart data
$deat_by_age = [];
for ($age = 0; $age <= $max_age; $age++) {
    $deat_by_age[$age]['M'] = 0;
    $deat_by_age[$age]['F'] = 0;
    $deat_by_age[$age]['U'] = 0;
}
$birt_by_decade = [];
$deat_by_decade = [];
for ($year = 1400; $year < 2050; $year += 10) {
    $birt_by_decade[$year]['M'] = 0;
    $birt_by_decade[$year]['F'] = 0;
    $birt_by_decade[$year]['U'] = 0;
    $deat_by_decade[$year]['M'] = 0;
    $deat_by_decade[$year]['F'] = 0;
    $deat_by_decade[$year]['U'] = 0;
}

$birthData = [
    [
        [
            'label' => I18N::translate('Century'),
            'type'  => 'date',
        ], [
            'label' => I18N::translate('Males'),
            'type'  => 'number',
        ], [
            'label' => I18N::translate('Females'),
            'type'  => 'number',
        ],
    ]
];

$deathData = [
    [
        [
            'label' => I18N::translate('Century'),
            'type'  => 'date',
        ], [
            'label' => I18N::translate('Males'),
            'type'  => 'number',
        ], [
            'label' => I18N::translate('Females'),
            'type'  => 'number',
        ],
    ]
];

$deathAgeData = [
    [
        I18N::translate('Age'),
        I18N::translate('Males'),
        I18N::translate('Females'),
        I18N::translate('Average age'),
    ]
];

?>

<div id="<?= e($table_id) ?>">
    <table class="table table-bordered table-sm maj-table-ancestors-indi"
        <?= view($module_name . '::lists/datatables-attributes', [ 'length_menu' => [ 16, 32, 64, 200, 1000, -1 ]]) ?>
    >
        <thead>
            <tr>
                <!-- MYARTJAUB-START -->
                <th colspan="<?= columnIndex(12, $column_indexes) ?>">
                    <div class="btn-toolbar d-flex justify-content-between mb-2" role="toolbar">
                        <div class="btn-group btn-group-sm" role="group">
                            <input id="<?= e($table_id) ?>-bg-sex-M" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(8, $column_indexes) ?>" data-filter-value="M" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-sex-M" class="btn btn-outline-secondary" title="<?= I18N::translate('Show only males.') ?>">
                                <?= view('icons/sex', ['sex' => 'M']) ?>
                            </label>

                            <input id="<?= e($table_id) ?>-bg-sex-F" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(8, $column_indexes) ?>" data-filter-value="F" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-sex-F" class="btn btn-outline-secondary" title="<?= I18N::translate('Show only females.') ?>">
                                <?= view('icons/sex', ['sex' => 'F']) ?>
                            </label>

                            <input id="<?= e($table_id) ?>-bg-sex-U" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(8, $column_indexes) ?>" data-filter-value="U" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-sex-U" class="btn btn-outline-secondary" title="<?= I18N::translate('Show only individuals for whom the gender is not known.') ?>">
                                <?= view('icons/sex', ['sex' => 'U']) ?>
                            </label>
                        </div>

                        <div class="btn-group btn-group-sm" role="group">
                            <input id="<?= e($table_id) ?>-bg-dead-N" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(10, $column_indexes) ?>" data-filter-value="N" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-dead-N" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals who are alive or couples where both partners are alive.') ?>">
                                <?= I18N::translate('Alive') ?>
                            </label>

                            <input id="<?= e($table_id) ?>-bg-dead-Y" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(10, $column_indexes) ?>" data-filter-value="Y" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-dead-Y" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals who are dead or couples where both partners are dead.') ?>">
                                <?= I18N::translate('Dead') ?>
                            </label>

                            <input id="<?= e($table_id) ?>-bg-dead-YES" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(10, $column_indexes) ?>" data-filter-value="YES" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-dead-YES" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals who died more than 100 years ago.') ?>">
                                <?= I18N::translate('Death') ?>&gt;100
                            </label>

                            <input id="<?= e($table_id) ?>-bg-alive-Y100" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(10, $column_indexes) ?>" data-filter-value="Y100" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-alive-Y100" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals who died within the last 100 years.') ?>">
                                <?= I18N::translate('Death') ?>&lt;=100
                            </label>
                        </div>

                        <div class="btn-group btn-group-sm" role="group">
                        
                            <input id="<?= e($table_id) ?>-bg-born-YES" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(9, $column_indexes) ?>" data-filter-value="YES" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-born-YES" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals born more than 100 years ago.') ?>">
                                <?= I18N::translate('Birth') ?>&gt;100
                            </label>

                            <input id="<?= e($table_id) ?>-bg-born-Y100" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(9, $column_indexes) ?>" data-filter-value="Y100" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-born-Y100" class="btn btn-outline-secondary" title="<?= I18N::translate('Show individuals born within the last 100 years.') ?>">
                                <?= I18N::translate('Birth') ?>&lt;=100
                            </label>
                        </div>

                        <div class="btn-group btn-group-sm" role="group">

                            <input id="<?= e($table_id) ?>-bg-roots-R" class="btn-check" type="checkbox" data-filter-column="<?= columnIndex(11, $column_indexes) ?>" data-filter-value="R" autocomplete="off">
                            <label for="<?= e($table_id) ?>-bg-roots-R" class="btn btn-outline-secondary" title="<?= I18N::translate('Show “roots” couples or individuals. These individuals may also be called “patriarchs”. They are individuals who have no parents recorded in the database.') ?>">
                                <?= I18N::translate('Roots') ?>
                            </label>

                        </div>
                    </div>
                </th>
                <!-- MYARTJAUB-END -->
            </tr>
            <tr>
                <th class="text-center"><?= I18N::translate('Sosa') ?></th>
                <th><?= I18N::translate('Given names') ?></th>
                <th><?= I18N::translate('Surname') ?></th>
                <th><?= I18N::translate('Birth') ?></th>
                <th><?= I18N::translate('Place') ?></th>
                <!--  MYARTJAUB-START -->
                <?php if ($maj_issourced_birth !== null) : ?>
                <th><?= $maj_issourced_birth['th'] ?></th>
                <?php endif; ?>
                <!--  MYARTJAUB-END -->
                <th><?= I18N::translate('Death') ?></th>
                <th><?= I18N::translate('Age') ?></th>
                <th><?= I18N::translate('Place') ?></th>
                <!--  MYARTJAUB-START -->
                <?php if ($maj_issourced_death !== null) : ?>
                <th><?= $maj_issourced_death['th'] ?></th>
                <?php endif; ?>
                <!--  MYARTJAUB-END -->
                <th hidden></th>
                <th hidden></th>
                <th hidden></th>
                <th hidden></th>
            </tr>
        </thead>

        <tbody>
            <?php foreach ($ancestors as $sosa => $individual) : ?>
            <tr class="<?= $individual->isPendingAddition() ? 'wt-new' : '' ?> <?= $individual->isPendingDeletion() ? 'wt-old' : '' ?>">
                <td class="maj-cell-sosa text-center" data-sort="<?= $sosa ?>"><?= I18N::number($sosa) ?></td>
                <td colspan="2" data-sort="<?= e(str_replace([',', Individual::PRAENOMEN_NESCIO, Individual::NOMEN_NESCIO], 'AAAA', implode(',', array_reverse(explode(',', $individual->sortName()))))) ?>">
                    <?php foreach ($individual->getAllNames() as $num => $name) : ?>
                        <a title="<?= $name['type'] === '_MARNM' ? I18N::translate('Married name') :  '' ?>" href="<?= e($individual->url()) ?>" class="<?= $num === $individual->getPrimaryName() ? '' : 'text-muted' ?>">
                            <?= $name['full'] ?>
                        </a>
                        <?php if ($num === $individual->getPrimaryName()) : ?>
                            <small><?= view('icons/sex', ['sex' => $individual->sex()]) ?></small>
                        <?php endif ?>
                        <br>
                    <?php endforeach ?>
                    <?= view('lists/individual-table-parents', ['individual' => $individual]) ?>
                </td>

                <td hidden data-sort="<?= e(str_replace([',', Individual::PRAENOMEN_NESCIO, Individual::NOMEN_NESCIO], 'AAAA', $individual->sortName())) ?>"></td>

                <!-- Birth date -->
                <?php $estimated_birth_date = $individual->getEstimatedBirthDate(); ?>

                <td data-sort="<?= $estimated_birth_date->julianDay() ?>">
                    <?php $birth_dates = $individual->getAllBirthDates(); ?>

                    <?php foreach ($birth_dates as $birth_date) : ?>
                        <?= $birth_date->display($tree) ?>
                        <br>
                    <?php endforeach ?>

                    <?php if (count($birth_dates) === 0 && $show_estimated_dates) : ?>
                        <?= $estimated_birth_date->display($tree) ?>
                    <?php endif ?>
                </td>
                
                <?php if (isset($birth_dates[0]) && $birth_dates[0]->gregorianYear() >= 1550 && $birth_dates[0]->gregorianYear() < 2030 && !isset($unique_indis[$individual->xref()])) : ?>
                    <?php
                    ++$birt_by_decade[(int) ($birth_dates[0]->gregorianYear() / 10) * 10][$individual->sex()];
                    ?>
                <?php endif ?>

                <!-- Birth place -->
                <td data-sort="<?= e($individual->getBirthPlace()->gedcomName()) ?>">
                    <?php foreach ($individual->getAllBirthPlaces() as $n => $birth_place) : ?>
                        <?= $birth_place->shortName(true) ?>
                        <br>
                    <?php endforeach ?>
                </td>
                
                <!--  MYARTJAUB-START -->
                <!-- IsSourced Birth -->
                <?php if ($maj_issourced_birth !== null) : ?>
                <td data-sort="<?= $maj_issourced_birth['records'][$sosa]['order'] ?? 0 ?>">
                    <?= $maj_issourced_birth['records'][$sosa]['text'] ?? '' ?>
                </td>
                <?php endif; ?>
                <!--  MYARTJAUB-END -->

                </td>

                <!-- Death date -->
                <?php $death_dates = $individual->getAllDeathDates() ?>
                <td data-sort="<?= $individual->getEstimatedDeathDate()->julianDay() ?>">
                    <?php foreach ($death_dates as $num => $death_date) : ?>
                        <?= $death_date->display($tree) ?>
                    <br>
                    <?php endforeach ?>

                    <?php if (count($death_dates) === 0 && $show_estimated_dates && $individual->getEstimatedDeathDate()->minimumDate()->minimumJulianDay() < $today_jd) : ?>
                        <?= $individual->getEstimatedDeathDate()->display($tree) ?>
                    <?php endif ?>
                </td>
                
                <?php if (isset($death_dates[0]) && $death_dates[0]->gregorianYear() >= 1550 && $death_dates[0]->gregorianYear() < 2030 && !isset($unique_indis[$individual->xref()])) : ?>
                    <?php
                    ++$deat_by_decade[(int) ($death_dates[0]->gregorianYear() / 10) * 10][$individual->sex()];
                    ?>
                <?php endif ?>
                
                <!-- Age at death -->
                <?php $age = new Age($birth_dates[0] ?? new Date(''), $death_dates[0] ?? new Date('')) ?>
                <?php if (!isset($unique_indis[$individual->xref()]) && $age->ageYears() >= 0 && $age->ageYears() <= $max_age) : ?>
                    <?php ++$deat_by_age[$age->ageYears()][$individual->sex()] ?>
                <?php endif ?>
                <td class="text-center" data-sort="<?= $age->ageDays() ?>">
                    <?= $age->ageYearsString() ?>
                </td>

                <!-- Death place -->
                <td data-sort="<?= e($individual->getDeathPlace()->gedcomName()) ?>">
                    <?php foreach ($individual->getAllDeathPlaces() as $n => $death_place) : ?>
                        <?= $death_place->shortName(true) ?>
                        <br>
                    <?php endforeach ?>
                </td>

                <!--  MYARTJAUB-START -->
                <!-- IsSourced Death -->
                <?php if ($maj_issourced_death !== null) : ?>
                <td data-sort="<?= $maj_issourced_death['records'][$sosa]['order'] ?? 0 ?>">
                    <?= $maj_issourced_death['records'][$sosa]['text'] ?? '' ?>
                </td>
                <?php endif; ?>
                <!--  MYARTJAUB-END -->

                </td>

                <!-- Filter by sex -->
                <td hidden>
                    <?= $individual->sex() ?>
                </td>

                <!-- Filter by birth date -->
                <td hidden>
                    <?php if ($estimated_birth_date->maximumJulianDay() > $hundred_years_ago && $estimated_birth_date->maximumJulianDay() <= $today_jd) : ?>
                        Y100
                    <?php else : ?>
                        YES
                    <?php endif ?>
                </td>

                <!-- Filter by death date -->
                <td hidden>
                    <?php if ($individual->getEstimatedDeathDate()->maximumJulianDay() > $hundred_years_ago && $individual->getEstimatedDeathDate()->maximumJulianDay() <= $today_jd) : ?>
                        Y100
                    <?php elseif ($individual->isDead()) : ?>
                        YES
                    <?php else : ?>
                        N
                    <?php endif ?>
                </td>

                <!-- Filter by roots/leaves -->
                <td hidden>
                    <?php if ($individual->childFamilies()->isEmpty()) : ?>
                        R
                    <?php elseif (!$individual->isDead() && $individual->numberOfChildren() < 1) : ?>
                        L
                    <?php endif ?>
                </td>
            </tr>

                <?php $unique_indis[$individual->xref()] = true ?>
            <?php endforeach ?>
        </tbody>

        <tfoot>
            <tr>
                <th class="maj-th-background" colspan="<?= columnIndex(12, $column_indexes)?>" >
                    <div class="text-center">
                        <?= I18N::translate(
                            'Number of Sosa ancestors: %1$s known / %2$s theoretical (%3$s)',
                            I18N::number($nb_ancestors_all),
                            I18N::number($nb_ancestors_theor),
                            I18N::percentage($nb_ancestors_all / $nb_ancestors_theor, 2)
                        ) ?>
                        <?php if ($nb_ancestors_shown < $nb_ancestors_all) : ?>
                            [<?= I18N::translate('%s hidden', I18N::number($nb_ancestors_all - $nb_ancestors_shown)) ?>]
                        <?php endif ?>
                    </div>
                </th>
            </tr>
            <tr>
                <th colspan="<?= columnIndex(12, $column_indexes)?>">
                    <div class="btn-group btn-group-sm">
                        <input type="checkbox" class="btn-check" id="btn-toggle-parents" autocomplete="off" data-wt-persist="individuals-parents">
                        <label class="btn btn-secondary" for="btn-toggle-parents">
                            <?= I18N::translate('Show parents') ?>
                        </label>
                        <input type="checkbox" class="btn-check" id="btn-toggle-statistics" autocomplete="off" data-wt-persist="individuals-statistics">
                        <label class="btn btn-secondary" for="btn-toggle-statistics">
                            <?= I18N::translate('Show statistics charts') ?>
                        </label>
                    </div>
                </th>
            </tr>
        </tfoot>
    </table>
</div>

<div id="maj-ancestors-indi-charts-<?= e($table_id) ?>" style="display: none;">
    <div class="d-grid gap-3 my-3">
        <div class="card">
            <div class="card-header">
                <?= I18N::translate('Decade of birth') ?>
            </div>
            <div class="card-body">
                <?php
                foreach ($birt_by_decade as $century => $values) {
                    if (($values['M'] + $values['F']) > 0) {
                        $birthData[] = [
                            [
                                'v' => 'Date(' . $century . ', 0, 1)',
                                'f' => $century,
                            ],
                            $values['M'],
                            $values['F'],
                        ];
                    }
                }
                ?>
                <?= view('lists/chart-by-decade', ['data' => $birthData, 'title' => I18N::translate('Decade of birth')]) ?>
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <?= I18N::translate('Decade of death') ?>
            </div>
            <div class="card-body">
                <?php
                foreach ($deat_by_decade as $century => $values) {
                    if (($values['M'] + $values['F']) > 0) {
                        $deathData[] = [
                            [
                                'v' => 'Date(' . $century . ', 0, 1)',
                                'f' => $century,
                            ],
                            $values['M'],
                            $values['F'],
                        ];
                    }
                }
                ?>
                <?= view('lists/chart-by-decade', ['data' => $deathData, 'title' => I18N::translate('Decade of death')]) ?>
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <?= I18N::translate('Age related to death year') ?>
            </div>
            <div class="card-body">
                <?php
                    $totalAge = 0;
                    $totalSum = 0;
                    $max      = 0;

                foreach ($deat_by_age as $age => $values) {
                    if (($values['M'] + $values['F']) > 0) {
                        if (($values['M'] + $values['F']) > $max) {
                            $max = $values['M'] + $values['F'];
                        }

                        $totalAge += $age * ($values['M'] + $values['F']);
                        $totalSum += $values['M'] + $values['F'];

                        $deathAgeData[] = [
                            $age,
                            $values['M'],
                            $values['F'],
                            null,
                        ];
                    }
                }

                if ($totalSum > 0) {
                    $deathAgeData[] = [
                        round($totalAge / $totalSum, 1),
                        null,
                        null,
                        0,
                    ];

                    $deathAgeData[] = [
                        round($totalAge / $totalSum, 1),
                        null,
                        null,
                        $max,
                    ];
                }
                ?>
                <?= view('lists/chart-by-age', ['data' => $deathAgeData, 'title' => I18N::translate('Age related to death year')]) ?>
            </div>
        </div>
    </div>
</div>
